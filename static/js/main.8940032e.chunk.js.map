{"version":3,"sources":["App.tsx","components/Goods/Goods.tsx","index.tsx"],"names":["SortType","Goods","goods","map","good","goodsFromServer","App","useState","NONE","sortType","setSort","isReversed","setReverse","visibleGoods","sort","good1","good2","LENGTH","length","ALPHABET","localeCompare","reverse","getReorderedGoods","className","type","classNames","onClick","ReactDOM","render","document","getElementById"],"mappings":"6KAmBKA,E,0ECbQC,EAAyB,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACpC,6BACGA,EAAMC,KAAI,SAAAC,GAAI,OACb,oBAAI,UAAQ,OAAZ,SACGA,GADqBA,SDHjBC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGL,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAqCE,IAAMM,EAAgB,WAC3B,MAA4BC,mBAASP,EAASQ,MAA9C,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAiCH,oBAAS,GAA1C,mBAAOI,EAAP,KAAmBC,EAAnB,KAmBMV,EA/CD,SACLA,EADK,GAGJ,IADCO,EACF,EADEA,SAAUE,EACZ,EADYA,WAENE,EAAY,YAAOX,GAmBzB,OAjBIO,IAAaT,EAASQ,MACxBK,EAAaC,MAAK,SAACC,EAAOC,GACxB,OAAQP,GACN,KAAKT,EAASiB,OACZ,OAAOF,EAAMG,OAASF,EAAME,OAC9B,KAAKlB,EAASmB,SACZ,OAAOJ,EAAMK,cAAcJ,GAC7B,QACE,OAAO,MAKXL,GACFE,EAAaQ,UAGRR,EAwBOS,CAAkBjB,EAAiB,CAAEI,WAAUE,eAE7D,OACE,sBAAKY,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,iBACA,CACE,WAAYhB,IAAaT,EAASmB,WAGtCO,QA9Be,WACrBhB,EAAQV,EAASmB,WAqBb,iCAaA,wBACEK,KAAK,SACLD,UAAWE,IACT,oBACA,CACE,WAAYhB,IAAaT,EAASiB,SAGtCS,QAvCa,WACnBhB,EAAQV,EAASiB,SA8Bb,4BAaA,wBACEO,KAAK,SACLD,UAAWE,IACT,oBACA,CACE,YAA2B,IAAfd,IAGhBe,QAhDY,WAClBd,GAAYD,IAuCR,sBAaEA,GAAcF,IAAaT,EAASQ,OACpC,wBACEgB,KAAK,SACLD,UAAU,4BACVG,QArDQ,WAChBhB,EAAQV,EAASQ,MACjBI,GAAW,IAgDL,sBAUJ,cAAC,EAAD,CAAOV,MAAOA,QEjIpByB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.8940032e.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\nimport { Goods } from './components/Goods';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType;\n  isReversed: boolean;\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  if (sortType !== SortType.NONE) {\n    visibleGoods.sort((good1, good2) => {\n      switch (sortType) {\n        case SortType.LENGTH:\n          return good1.length - good2.length;\n        case SortType.ALPHABET:\n          return good1.localeCompare(good2);\n        default:\n          return 0;\n      }\n    });\n  }\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\nexport const App: React.FC = () => {\n  const [sortType, setSort] = useState(SortType.NONE);\n  const [isReversed, setReverse] = useState(false);\n\n  const sortByAlphabet = () => {\n    setSort(SortType.ALPHABET);\n  };\n\n  const sortByLength = () => {\n    setSort(SortType.LENGTH);\n  };\n\n  const reverseList = () => {\n    setReverse(!isReversed);\n  };\n\n  const resetList = () => {\n    setSort(SortType.NONE);\n    setReverse(false);\n  };\n\n  const goods = getReorderedGoods(goodsFromServer, { sortType, isReversed });\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={classNames(\n            'button is-info',\n            {\n              'is-light': sortType !== SortType.ALPHABET,\n            },\n          )}\n          onClick={sortByAlphabet}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames(\n            'button is-success',\n            {\n              'is-light': sortType !== SortType.LENGTH,\n            },\n          )}\n          onClick={sortByLength}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames(\n            'button is-warning',\n            {\n              'is-light': isReversed === false,\n            },\n          )}\n          onClick={reverseList}\n        >\n          Reverse\n        </button>\n\n        {(isReversed || sortType !== SortType.NONE) && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={resetList}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <Goods goods={goods} />\n    </div>\n  );\n};\n","import React from 'react';\n\nexport type Props = {\n  goods: string[],\n};\n\nexport const Goods: React.FC<Props> = ({ goods }) => (\n  <ul>\n    {goods.map(good => (\n      <li data-cy=\"Good\" key={good}>\n        {good}\n      </li>\n    ))}\n  </ul>\n);\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}